version: "3.8"

services:
  #              _   _
  #             ( )_( )
  #    __    __ |  _) |__
  #  / _  \/ __ \ | |  _  \
  # ( (_) |  ___/ |_| | | |
  #  \__  |\____)\__)_) (_)
  # ( )_) |
  #  \___/

  geth:
    image: ethereum/client-go:${GETH_DOCKER_TAG}
    ports:
      - 30303:30303/tcp
      - 30303:30303/udp
      - 8545:8545
    command: --goerli --http --http.port=${GETH_PORT} --http.addr=0.0.0.0 --http.vhosts="*" --allow-insecure-unlock --http.api="db,eth,net,engine,rpc,web3,personal"
    networks: [dvnode]
    volumes:
      - ./data/geth:/root/.ethereum
    restart: on-failure

  #  _           _     _   _
  # (_ ) _      ( )   ( )_( )
  #  | |(_)  __ | |__ |  _) |__    _   _   _  ___   __
  #  | || |/ _  \  _  \ | |  _  \/ _ \( ) ( )  __)/ __ \
  #  | || | (_) | | | | |_| | | | (_) ) (_) |__  \  ___/
  # (___)_)\__  |_) (_)\__)_) (_)\___/ \___/(____/\____)
  #       ( )_) |
  #        \___/

  lighthouse:
    image: sigp/lighthouse:${LIGHTHOUSE_DOCKER_TAG}
    depends_on:
      - geth
    ports:
      - 9000:9000/tcp
      - 9000:9000/udp
      - 5052:5052
    command: |
      lighthouse bn
      --network=${ETH2_NETWORK}
      --eth1=http://geth:${GETH_PORT}
      --http
      --http-address=0.0.0.0
      --http-port=${LIGHTHOUSE_HTTP_PORT}
    networks: [dvnode]
    volumes:
      - ./data/lighthouse:/opt/app/beacon
    restart: on-failure

  #       ( )
  #    ___| |__    _ _ _ __   _    ___
  #  / ___)  _  \/ _  )  __)/ _ \/  _  \
  # ( (___| | | | (_| | |  ( (_) ) ( ) |
  #  \____)_) (_)\__ _)_)   \___/(_) (_)

  charon:
    # Pegged charon version (update this for each release).
    # image: obolnetwork/charon:${CHARON_VERSION}
    image: ghcr.io/obolnetwork/charon:v0.8.1
    depends_on:
      - lighthouse
    env_file: .env
    networks: [dvnode]
    volumes:
      - .charon:/opt/charon/.charon
    restart: on-failure

  #  _         _
  # ( )_      ( )
  # |  _)  __ | |/ ) _   _
  # | |  / __ \   ( ( ) ( )
  # | |_(  ___/ |\ \| (_) |
  #  \__)\____)_) (_)\___/

  teku:
    image: consensys/teku:${TEKU_VERSION}
    depends_on:
      - charon
      - lighthouse
    ports:
      - 8008:8008
    command: |
      validator-client
      --config-file "/opt/charon/teku/teku_config.yaml"
    networks: [dvnode]
    volumes:
      - ".charon/validator_keys:/opt/charon/validator_keys"
      - "./config:/opt/charon/teku"
    restart: on-failure

  #                          _
  #                        _( )_            _
  #   ___ ___    _    ___ (_)  _)  _   _ __(_) ___    __
  # /  _   _  \/ _ \/  _  \ | |  / _ \(  __) |  _  \/ _  \
  # | ( ) ( ) | (_) ) ( ) | | |_( (_) ) |  | | ( ) | (_) |
  # (_) (_) (_)\___/(_) (_)_)\__)\___/(_)  (_)_) (_)\__  |
  #                                                ( )_) |
  #                                                 \___/

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    networks: [dvnode]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    depends_on: [prometheus]
    ports:
      - "3000:3000"
    networks: [dvnode]
    volumes:
      - ./grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/datasource.yml
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/dashboards:/etc/dashboards

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    networks: [dvnode]

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
    networks: [dvnode]

networks:
  dvnode:
